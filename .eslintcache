[{"D:\\React Project\\todo_app\\src\\index.js":"1","D:\\React Project\\todo_app\\src\\reportWebVitals.js":"2","D:\\React Project\\todo_app\\src\\App.js":"3","D:\\React Project\\todo_app\\src\\components\\Todo.js":"4","D:\\React Project\\todo_app\\src\\components\\Filter.js":"5","D:\\React Project\\todo_app\\src\\components\\Input.js":"6","D:\\React Project\\todo_app\\src\\components\\TodoItem.js":"7","D:\\React Project\\todo_app\\src\\lib\\util.js":"8","D:\\React Project\\todo_app\\src\\hooks\\storage.js":"9","D:\\React Project\\todo_app\\src\\hooks\\fbStorage.js":"10","D:\\React Project\\todo_app\\src\\lib\\firebase.js":"11"},{"size":517,"mtime":1656513154776,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1656513154778,"results":"14","hashOfConfig":"13"},{"size":291,"mtime":1656513154772,"results":"15","hashOfConfig":"13"},{"size":1777,"mtime":1656521471903,"results":"16","hashOfConfig":"13"},{"size":694,"mtime":1656513154773,"results":"17","hashOfConfig":"13"},{"size":606,"mtime":1656521079786,"results":"18","hashOfConfig":"13"},{"size":407,"mtime":1656513154774,"results":"19","hashOfConfig":"13"},{"size":68,"mtime":1656513154777,"results":"20","hashOfConfig":"13"},{"size":706,"mtime":1656513154775,"results":"21","hashOfConfig":"22"},{"size":1127,"mtime":1656521363534,"results":"23","hashOfConfig":"13"},{"size":1570,"mtime":1656566910690,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1edk8hi",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fkngrp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Project\\todo_app\\src\\index.js",[],["52","53"],"D:\\React Project\\todo_app\\src\\reportWebVitals.js",[],"D:\\React Project\\todo_app\\src\\App.js",[],"D:\\React Project\\todo_app\\src\\components\\Todo.js",["54","55","56"],"import React, { useState } from 'react';\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useFbStorage from \"../hooks/fbStorage\";\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\r\n  \r\n  const [filter, setFilter] = React.useState('ALL');\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n  \r\n  const handleCheck = checked => {\r\n    updateItem(checked);\r\n  };\r\n  \r\n  const handleAdd = text => {\r\n    addItem({text, done: false });\r\n  };\r\n  \r\n  const handleFilterChange = value => setFilter(value);\r\n\r\n  return (\r\n    <article className=\"panel is-danger\">\r\n      <div className=\"panel-heading\">\r\n        <span className=\"icon-text\">\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-calendar-check\"></i>\r\n          </span>\r\n          <span> ITSS Todoアプリ</span>\r\n        </span>\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <TodoItem \r\n          key={item.id}\r\n          item={item}\r\n          onCheck={handleCheck}\r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Todo;","D:\\React Project\\todo_app\\src\\components\\Filter.js",["57","58","59"],"function Filter({ value, onChange }) {\r\n\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className={value === 'ALL' ?  'is-active' : ''}\r\n      >全て</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ?  'is-active' : ''}\r\n      >未完了</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ?  'is-active' : ''}\r\n      >完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\React Project\\todo_app\\src\\components\\Input.js",["60"],"import React, { useState } from 'react';\r\n\r\nfunction Input( { onAdd } ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\React Project\\todo_app\\src\\components\\TodoItem.js",[],"D:\\React Project\\todo_app\\src\\lib\\util.js",[],"D:\\React Project\\todo_app\\src\\hooks\\storage.js",[],"D:\\React Project\\todo_app\\src\\hooks\\fbStorage.js",["61"],"import {useEffect, useState} from \"react\";\r\nimport {addFbItems, deleteFbItems, getFbItems, updateFbItems} from \"../lib/firebase\";\r\n\r\n\r\nfunction useFbStorage() {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, [items]);\r\n\r\n    const getItems = async () => {\r\n        const _items = await getFbItems();\r\n        setItems(_items);\r\n    }\r\n\r\n    const addItem = async (item) => {\r\n        const newItem = {...item};\r\n        await addFbItems(newItem);\r\n        setItems([...items, newItem]);\r\n    }\r\n\r\n    const updateItem = async (checkedItem) => {\r\n        const change = {done: !checkedItem.done};\r\n        await updateFbItems(change, checkedItem.id);\r\n        const updateItems = items.map(i => {\r\n            if (i.id === checkedItem.id)\r\n                i = {...i, change};\r\n            return i;\r\n        });\r\n        setItems(updateItems);\r\n    }\r\n\r\n    const clearItems = () => {\r\n        items.map(i => {\r\n            deleteFbItems(i);\r\n        });\r\n        setItems([]);\r\n    };\r\n\r\n    return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFbStorage;","D:\\React Project\\todo_app\\src\\lib\\firebase.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":12,"column":9,"nodeType":"68","messageId":"69","endLine":12,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":19,"column":42,"nodeType":"73","messageId":"74","endLine":19,"endColumn":44},{"ruleId":"75","severity":1,"message":"76","line":10,"column":7,"nodeType":"77","endLine":14,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":15,"column":7,"nodeType":"77","endLine":19,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":20,"column":7,"nodeType":"77","endLine":24,"endColumn":8},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"78","line":35,"column":21,"nodeType":"73","messageId":"79","endLine":35,"endColumn":23},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]